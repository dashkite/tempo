"use strict";

var _assert = _interopRequireDefault(require("assert"));

var _amen = require("amen");

var _string = require("../src/string");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(async function () {
  return (0, _amen.print)((await (0, _amen.test)("string helpers", [(0, _amen.test)("toString"), (0, _amen.test)("toUpper"), (0, _amen.test)("toLower"), (0, _amen.test)("plainText", function () {
    (0, _assert.default)((0, _string.plainText)("hello-world") === "hello world");
    return (0, _assert.default)((0, _string.plainText)("Hello World") === "hello world");
  }), (0, _amen.test)("capitalize", function () {
    return (0, _assert.default)((0, _string.capitalize)("hello world") === "Hello world");
  }), (0, _amen.test)("titleCase", function () {
    return (0, _assert.default)((0, _string.titleCase)("hello woRld") === "Hello World");
  }), (0, _amen.test)("camelCase", function () {
    return (0, _assert.default)((0, _string.camelCase)("Hello World") === "helloWorld");
  }), (0, _amen.test)("underscored", function () {
    return (0, _assert.default)((0, _string.underscored)("Hello World") === "hello_world");
  }), (0, _amen.test)("dashed", function () {
    return (0, _assert.default)((0, _string.dashed)("Hello World") === "hello-world");
  }), (0, _amen.test)("htmlEscape", function () {
    return (0, _assert.default)((0, _string.htmlEscape)("<a href='foo'>bar & baz</a>") === "&lt;a href=&#39;foo&#39;&gt;bar &amp; baz&lt;&#x2F;a&gt;");
  }), (0, _amen.test)("trim"), (0, _amen.test)("split"), (0, _amen.test)("w", function () {
    return (0, _assert.default)((0, _string.w)("one two three").length === 3);
  }), (0, _amen.test)("blank", function () {
    (0, _assert.default)((0, _string.blank)(""));
    return (0, _assert.default)(!(0, _string.blank)("x"));
  }), (0, _amen.test)("isMatch", function () {
    return (0, _assert.default)((0, _string.isMatch)(/foo/, "foobar"));
  }), // test "match", ->
  //   assert (isMatch /foo/, "foobar")[0] = "foo"
  (0, _amen.test)("replace", function () {
    return (0, _assert.default)((0, _string.replace)(/bar/, "baz", "foobar") === "foobaz");
  })])));
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS1wYXJjaG1lbnQvdGVzdC9zdHJpbmcuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFJRyxDQUFBLGtCQUFBO1NBRUQsa0JBQU0sTUFBTSxnQkFBQSxnQkFBQSxFQUF1QixDQUVqQyxnQkFGaUMsVUFFakMsQ0FGaUMsRUFHakMsZ0JBSGlDLFNBR2pDLENBSGlDLEVBSWpDLGdCQUppQyxTQUlqQyxDQUppQyxFQU1qQyxnQkFBQSxXQUFBLEVBQWtCLFlBQUE7QUFDaEIseUJBQU8sdUJBQUEsYUFBQSxNQUFQLGFBQUE7V0FDQSxxQkFBTyx1QkFBQSxhQUFBLE1BQVAsYUFBQSxDO0FBUitCLEdBTWpDLENBTmlDLEVBVWpDLGdCQUFBLFlBQUEsRUFBbUIsWUFBQTtXQUNqQixxQkFBTyx3QkFBQSxhQUFBLE1BQVAsYUFBQSxDO0FBWCtCLEdBVWpDLENBVmlDLEVBYWpDLGdCQUFBLFdBQUEsRUFBa0IsWUFBQTtXQUNoQixxQkFBTyx1QkFBQSxhQUFBLE1BQVAsYUFBQSxDO0FBZCtCLEdBYWpDLENBYmlDLEVBZ0JqQyxnQkFBQSxXQUFBLEVBQWtCLFlBQUE7V0FDaEIscUJBQU8sdUJBQUEsYUFBQSxNQUFQLFlBQUEsQztBQWpCK0IsR0FnQmpDLENBaEJpQyxFQW1CakMsZ0JBQUEsYUFBQSxFQUFvQixZQUFBO1dBQ2xCLHFCQUFPLHlCQUFBLGFBQUEsTUFBUCxhQUFBLEM7QUFwQitCLEdBbUJqQyxDQW5CaUMsRUFzQmpDLGdCQUFBLFFBQUEsRUFBZSxZQUFBO1dBQ2IscUJBQU8sb0JBQUEsYUFBQSxNQUFQLGFBQUEsQztBQXZCK0IsR0FzQmpDLENBdEJpQyxFQXlCakMsZ0JBQUEsWUFBQSxFQUFtQixZQUFBO1dBQ2pCLHFCQUFPLHdCQUFBLDZCQUFBLE1BQVAsMERBQUEsQztBQTFCK0IsR0F5QmpDLENBekJpQyxFQTZCakMsZ0JBN0JpQyxNQTZCakMsQ0E3QmlDLEVBK0JqQyxnQkEvQmlDLE9BK0JqQyxDQS9CaUMsRUFpQ2pDLGdCQUFBLEdBQUEsRUFBVSxZQUFBO1dBQUcscUJBQVEsZUFBRCxlQUFDLENBQUQsQ0FBQSxNQUFBLEtBQVAsQ0FBQSxDO0FBakNvQixHQWlDakMsQ0FqQ2lDLEVBbUNqQyxnQkFBQSxPQUFBLEVBQWMsWUFBQTtBQUNaLHlCQUFPLG1CQUFQLEVBQU8sQ0FBUDtXQUNBLHFCQUFPLENBQUMsbUJBQVIsR0FBUSxDQUFSLEM7QUFyQytCLEdBbUNqQyxDQW5DaUMsRUF1Q2pDLGdCQUFBLFNBQUEsRUFBZ0IsWUFBQTtXQUNkLHFCQUFRLHFCQUFBLEtBQUEsRUFBUixRQUFRLENBQVIsQztBQXhDK0IsR0F1Q2pDLENBdkNpQyxFOztBQTZDakMsa0JBQUEsU0FBQSxFQUFnQixZQUFBO1dBQ2QscUJBQVEscUJBQUEsS0FBQSxFQUFBLEtBQUEsRUFBRCxRQUFDLENBQUQsS0FBUCxRQUFBLEM7QUE5QytCLEdBNkNqQyxDQTdDaUMsQ0FBdkIsQ0FBWixFO0FBRkYsQ0FBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc3NlcnQgZnJvbSBcImFzc2VydFwiXG5pbXBvcnQge3Rlc3QsIHByaW50fSBmcm9tIFwiYW1lblwiXG5cbmltcG9ydCB7dG9TdHJpbmcsIHRvVXBwZXIsIHRvTG93ZXIsIGNhcGl0YWxpemUsXG4gIHRpdGxlQ2FzZSwgY2FtZWxDYXNlLCB1bmRlcnNjb3JlZCwgZGFzaGVkLCBwbGFpblRleHQsXG4gIGh0bWxFc2NhcGUsIHcsIGJsYW5rLCBtYXRjaCwgaXNNYXRjaCwgcmVwbGFjZX0gZnJvbSBcIi4uL3NyYy9zdHJpbmdcIlxuXG5kbyAtPlxuXG4gIHByaW50IGF3YWl0IHRlc3QgXCJzdHJpbmcgaGVscGVyc1wiLCBbXG5cbiAgICB0ZXN0IFwidG9TdHJpbmdcIlxuICAgIHRlc3QgXCJ0b1VwcGVyXCJcbiAgICB0ZXN0IFwidG9Mb3dlclwiXG5cbiAgICB0ZXN0IFwicGxhaW5UZXh0XCIsIC0+XG4gICAgICBhc3NlcnQgcGxhaW5UZXh0KFwiaGVsbG8td29ybGRcIikgPT0gXCJoZWxsbyB3b3JsZFwiXG4gICAgICBhc3NlcnQgcGxhaW5UZXh0KFwiSGVsbG8gV29ybGRcIikgPT0gXCJoZWxsbyB3b3JsZFwiXG5cbiAgICB0ZXN0IFwiY2FwaXRhbGl6ZVwiLCAtPlxuICAgICAgYXNzZXJ0IGNhcGl0YWxpemUoIFwiaGVsbG8gd29ybGRcIiApID09IFwiSGVsbG8gd29ybGRcIlxuXG4gICAgdGVzdCBcInRpdGxlQ2FzZVwiLCAtPlxuICAgICAgYXNzZXJ0IHRpdGxlQ2FzZSggXCJoZWxsbyB3b1JsZFwiICkgPT0gXCJIZWxsbyBXb3JsZFwiXG5cbiAgICB0ZXN0IFwiY2FtZWxDYXNlXCIsIC0+XG4gICAgICBhc3NlcnQgY2FtZWxDYXNlKCBcIkhlbGxvIFdvcmxkXCIgKSA9PSBcImhlbGxvV29ybGRcIlxuXG4gICAgdGVzdCBcInVuZGVyc2NvcmVkXCIsIC0+XG4gICAgICBhc3NlcnQgdW5kZXJzY29yZWQoIFwiSGVsbG8gV29ybGRcIiApID09IFwiaGVsbG9fd29ybGRcIlxuXG4gICAgdGVzdCBcImRhc2hlZFwiLCAtPlxuICAgICAgYXNzZXJ0IGRhc2hlZCggXCJIZWxsbyBXb3JsZFwiICkgPT0gXCJoZWxsby13b3JsZFwiXG5cbiAgICB0ZXN0IFwiaHRtbEVzY2FwZVwiLCAtPlxuICAgICAgYXNzZXJ0IGh0bWxFc2NhcGUoIFwiPGEgaHJlZj0nZm9vJz5iYXIgJiBiYXo8L2E+XCIgKSA9PVxuICAgICAgICBcIiZsdDthIGhyZWY9JiMzOTtmb28mIzM5OyZndDtiYXIgJmFtcDsgYmF6Jmx0OyYjeDJGO2EmZ3Q7XCJcblxuICAgIHRlc3QgXCJ0cmltXCJcblxuICAgIHRlc3QgXCJzcGxpdFwiXG5cbiAgICB0ZXN0IFwid1wiLCAtPiBhc3NlcnQgKHcgXCJvbmUgdHdvIHRocmVlXCIpLmxlbmd0aCA9PSAzXG5cbiAgICB0ZXN0IFwiYmxhbmtcIiwgLT5cbiAgICAgIGFzc2VydCBibGFuayBcIlwiXG4gICAgICBhc3NlcnQgIWJsYW5rIFwieFwiXG5cbiAgICB0ZXN0IFwiaXNNYXRjaFwiLCAtPlxuICAgICAgYXNzZXJ0IChpc01hdGNoIC9mb28vLCBcImZvb2JhclwiKVxuXG4gICAgIyB0ZXN0IFwibWF0Y2hcIiwgLT5cbiAgICAjICAgYXNzZXJ0IChpc01hdGNoIC9mb28vLCBcImZvb2JhclwiKVswXSA9IFwiZm9vXCJcbiAgICAjXG4gICAgdGVzdCBcInJlcGxhY2VcIiwgLT5cbiAgICAgIGFzc2VydCAocmVwbGFjZSAvYmFyLywgXCJiYXpcIiwgXCJmb29iYXJcIikgPT0gXCJmb29iYXpcIlxuXG5dXG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceURL=/Users/david/repos/panda-parchment/test/string.coffee