"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serve = exports.watch = exports.transform = exports.copy = exports.extension = exports.write = exports.read = exports.glob = void 0;

var _path = require("path");

var _jstransformer = _interopRequireDefault(require("jstransformer"));

var _pandaRiver = require("panda-river");

var _pandaGarden = require("panda-garden");

var _pandaParchment = require("panda-parchment");

var _pandaQuill = require("panda-quill");

var _chokidar = _interopRequireDefault(require("chokidar"));

var _http = _interopRequireDefault(require("http"));

var _connect = _interopRequireDefault(require("connect"));

var _morgan = _interopRequireDefault(require("morgan"));

var _finalhandler = _interopRequireDefault(require("finalhandler"));

var _connectHistoryApiFallback = _interopRequireDefault(require("connect-history-api-fallback"));

var _serveStatic = _interopRequireDefault(require("serve-static"));

var _safe = require("colors/safe");

var _fastGlob = _interopRequireDefault(require("fast-glob"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var complete, copy, create, extension, glob, parse, read, serve, transform, watch, write;
exports.write = write;
exports.watch = watch;
exports.transform = transform;
exports.serve = serve;
exports.read = read;
exports.glob = glob;
exports.extension = extension;
exports.copy = copy;

parse = function (path) {
  var dir, ext, name;
  ({
    dir,
    name,
    ext
  } = (0, _path.parse)(path));
  return {
    path: path,
    directory: dir,
    name: name,
    extension: ext
  };
};

create = (0, _pandaGarden.curry)(function (path, rpath) {
  return (0, _pandaParchment.include)(parse(rpath), {
    source: parse((0, _path.resolve)(path, rpath)),
    target: {},
    data: {}
  });
});

exports.glob = glob = async function (pattern, path) {
  return (0, _pandaRiver.map)(create(path), (await (0, _fastGlob.default)(pattern, {
    cwd: path
  })));
};

complete = function (directory, context) {
  var defaults, extension, name, target;
  ({
    target
  } = context);

  if (target.path != null) {
    context.target = parse(target.path);
  } else {
    defaults = parse((0, _path.resolve)(directory, context.path));

    if (target.directory == null) {
      target.directory = defaults.directory;
    }

    if (target.name == null) {
      target.name = defaults.name;
    }

    if (target.extension == null) {
      target.extension = defaults.extension;
    }

    ({
      directory,
      name,
      extension
    } = target);
    target.path = (0, _path.join)(directory, `${name}${extension}`);
  }

  return context;
};

exports.read = read = (0, _pandaGarden.tee)(async function ({
  source
}) {
  return source.content = await (0, _pandaQuill.read)(source.path);
});
exports.write = write = (0, _pandaGarden.curry)((0, _pandaGarden.binary)(async function (directory, context) {
  var target;
  ({
    target
  } = context);

  if (target.content != null) {
    complete(directory, context);
    await (0, _pandaQuill.mkdirp)("0777", target.directory);
    await (0, _pandaQuill.write)(target.path, target.content);
    return context;
  } else {
    return console.error((0, _safe.red)("[warning] p9k/write: attempt to write with no content."));
  }
}));

exports.extension = extension = function (extension) {
  return (0, _pandaGarden.tee)(function ({
    target
  }) {
    return target.extension = extension;
  });
};

exports.copy = copy = (0, _pandaGarden.curry)((0, _pandaGarden.binary)(async function (directory, context) {
  var source, target;
  ({
    source,
    target
  } = complete(directory, context));
  await (0, _pandaQuill.mkdirp)("0777", target.directory);
  (0, _pandaQuill.cp)(source.path, target.path);
  return context;
}));

exports.transform = transform = function (transformer, options) {
  var adapter;
  adapter = (0, _jstransformer.default)(transformer);
  return (0, _pandaGarden.tee)(async function ({
    source,
    target
  }) {
    var ref, result;

    if (source.content == null) {
      source.content = await read(source.path);
    }

    options.filename = source.path;
    result = await adapter.renderAsync(source.content, options);
    return target.content = (ref = result.body) != null ? ref : "";
  });
};

exports.watch = watch = function (path, handler) {
  return function () {
    return _chokidar.default.watch(path, {
      ignoreInitial: true
    }).on("all", handler);
  };
};

exports.serve = serve = function (path, options) {
  return function () {
    var handler, port;
    ({
      port
    } = options);
    handler = (0, _connect.default)();

    if (options.logger != null) {
      handler.use((0, _morgan.default)(options.logger));
    }

    if (options.rewrite != null) {
      handler.use(options.rewrite ? (0, _connectHistoryApiFallback.default)() : (0, _connectHistoryApiFallback.default)(options.rewrite));
    }

    handler.use((0, _serveStatic.default)("./build", options.files));
    handler.use(_finalhandler.default);
    return _http.default.createServer(handler).listen(port, function () {
      return console.log((0, _safe.green)(`p9k: server listening on port ${port}`));
    });
  };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS05MDAwL3NyYy9oZWxwZXJzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7QUFoQkEsSUFBQSxRQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxTQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLFNBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQTs7Ozs7Ozs7OztBQWtCQSxLQUFBLEdBQVEsVUFBQSxJQUFBLEVBQUE7QUFDTixNQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQTtBQUFBLEdBQUE7QUFBQSxJQUFBLEdBQUE7QUFBQSxJQUFBLElBQUE7QUFBQSxJQUFBO0FBQUEsTUFBbUIsaUJBQW5CLElBQW1CLENBQW5CO1NBQ0E7QUFBQSxJQUFBLElBQUEsRUFBQSxJQUFBO0FBQ0EsSUFBQSxTQUFBLEVBREEsR0FBQTtBQUVBLElBQUEsSUFBQSxFQUZBLElBQUE7QUFHQSxJQUFBLFNBQUEsRUFBVztBQUhYLEc7QUFGTSxDQUFSOztBQU9BLE1BQUEsR0FBUyx3QkFBTSxVQUFBLElBQUEsRUFBQSxLQUFBLEVBQUE7U0FDYiw2QkFBUyxLQUFBLENBQVQsS0FBUyxDQUFULEVBQ0U7QUFBQSxJQUFBLE1BQUEsRUFBUSxLQUFBLENBQU0sbUJBQUEsSUFBQSxFQUFkLEtBQWMsQ0FBTixDQUFSO0FBQ0EsSUFBQSxNQUFBLEVBREEsRUFBQTtBQUVBLElBQUEsSUFBQSxFQUFNO0FBRk4sR0FERixDO0FBRE8sQ0FBQSxDQUFUOztBQU1BLGVBQUEsSUFBQSxHQUFPLGdCQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUE7U0FDTCxxQkFBSyxNQUFBLENBQUwsSUFBSyxDQUFMLEdBQW9CLE1BQU0sdUJBQUEsT0FB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Q0FBWjtBQUNBLElBQUEsT0FBTyxDQUFQLEdBQUEsQ0FBQSxxQkFBQTtXQUNBLGNBQUEsWUFBQSxDQUFBLE9BQUEsRUFBQSxNQUFBLENBQUEsSUFBQSxFQUNjLFlBQUE7YUFDWixPQUFPLENBQVAsR0FBQSxDQUFZLGlCQUFNLGlDQUFBLElBQWxCLEVBQVksQ0FBWixDO0FBRkYsS0FBQSxDO0FBVEYsRztBQURNLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3BhcnNlIGFzIF9wYXJzZSwgam9pbiwgcmVzb2x2ZX0gZnJvbSAgXCJwYXRoXCJcbmltcG9ydCBfdHJhbnNmb3JtIGZyb20gXCJqc3RyYW5zZm9ybWVyXCJcbmltcG9ydCB7bWFwfSBmcm9tIFwicGFuZGEtcml2ZXJcIlxuaW1wb3J0IHtjdXJyeSwgYmluYXJ5LCB0ZWV9IGZyb20gXCJwYW5kYS1nYXJkZW5cIlxuaW1wb3J0IHtpbmNsdWRlfSBmcm9tIFwicGFuZGEtcGFyY2htZW50XCJcbmltcG9ydCB7cmVhZCBhcyBfcmVhZCwgd3JpdGUgYXMgX3dyaXRlLCBta2RpcnAsIGNwfSBmcm9tIFwicGFuZGEtcXVpbGxcIlxuaW1wb3J0IGNob2tpZGFyIGZyb20gXCJjaG9raWRhclwiXG5cbmltcG9ydCBodHRwIGZyb20gXCJodHRwXCJcbmltcG9ydCBjb25uZWN0IGZyb20gXCJjb25uZWN0XCJcbmltcG9ydCBsb2dnZXIgZnJvbSBcIm1vcmdhblwiXG5pbXBvcnQgZmluaXNoIGZyb20gXCJmaW5hbGhhbmRsZXJcIlxuaW1wb3J0IHJld3JpdGUgZnJvbSBcImNvbm5lY3QtaGlzdG9yeS1hcGktZmFsbGJhY2tcIlxuXG5pbXBvcnQgZmlsZXMgZnJvbSBcInNlcnZlLXN0YXRpY1wiXG5pbXBvcnQge2dyZWVuLCByZWR9IGZyb20gXCJjb2xvcnMvc2FmZVwiXG5pbXBvcnQgX2dsb2IgZnJvbSBcImZhc3QtZ2xvYlwiXG5cbnBhcnNlID0gKHBhdGgpIC0+XG4gIHtkaXIsIG5hbWUsIGV4dH0gPSBfcGFyc2UgcGF0aFxuICBwYXRoOiBwYXRoXG4gIGRpcmVjdG9yeTogZGlyXG4gIG5hbWU6IG5hbWVcbiAgZXh0ZW5zaW9uOiBleHRcblxuY3JlYXRlID0gY3VycnkgKHBhdGgsIHJwYXRoKSAtPlxuICBpbmNsdWRlIChwYXJzZSBycGF0aCksXG4gICAgc291cmNlOiBwYXJzZSByZXNvbHZlIHBhdGgsIHJwYXRoXG4gICAgdGFyZ2V0OiB7fVxuICAgIGRhdGE6IHt9XG5cbmdsb2IgPSAocGF0dGVybiwgcGF0aCkgLT5cbiAgbWFwIChjcmVhdGUgcGF0aCksIChhd2FpdCBfZ2xvYiBwYXR0ZXJuLCBjd2Q6IHBhdGgpXG5cbmNvbXBsZXRlID0gKGRpcmVjdG9yeSwgY29udGV4dCkgLT5cbiAge3RhcmdldH0gPSBjb250ZXh0XG4gIGlmIHRhcmdldC5wYXRoP1xuICAgIGNvbnRleHQudGFyZ2V0ID0gcGFyc2UgdGFyZ2V0LnBhdGhcbiAgZWxzZVxuICAgIGRlZmF1bHRzID0gcGFyc2UgcmVzb2x2ZSBkaXJlY3RvcnksIGNvbnRleHQucGF0aFxuICAgIHRhcmdldC5kaXJlY3RvcnkgPz0gZGVmYXVsdHMuZGlyZWN0b3J5XG4gICAgdGFyZ2V0Lm5hbWUgPz0gZGVmYXVsdHMubmFtZVxuICAgIHRhcmdldC5leHRlbnNpb24gPz0gZGVmYXVsdHMuZXh0ZW5zaW9uXG4gICAge2RpcmVjdG9yeSwgbmFtZSwgZXh0ZW5zaW9ufSA9IHRhcmdldFxuICAgIHRhcmdldC5wYXRoID0gam9pbiBkaXJlY3RvcnksIFwiI3tuYW1lfSN7ZXh0ZW5zaW9ufVwiXG4gIGNvbnRleHRcblxucmVhZCA9IHRlZSAoe3NvdXJjZX0pIC0+XG4gIHNvdXJjZS5jb250ZW50ID0gYXdhaXQgX3JlYWQgc291cmNlLnBhdGhcblxud3JpdGUgPSBjdXJyeSBiaW5hcnkgKGRpcmVjdG9yeSwgY29udGV4dCkgLT5cbiAge3RhcmdldH0gPSBjb250ZXh0XG4gIGlmIHRhcmdldC5jb250ZW50P1xuICAgIGNvbXBsZXRlIGRpcmVjdG9yeSwgY29udGV4dFxuICAgIGF3YWl0IG1rZGlycCBcIjA3NzdcIiwgdGFyZ2V0LmRpcmVjdG9yeVxuICAgIGF3YWl0IF93cml0ZSB0YXJnZXQucGF0aCwgdGFyZ2V0LmNvbnRlbnRcbiAgICBjb250ZXh0XG4gIGVsc2VcbiAgICBjb25zb2xlLmVycm9yIHJlZCBcIlt3YXJuaW5nXSBwOWsvd3JpdGU6IGF0dGVtcHQgdG8gd3JpdGUgd2l0aCBubyBjb250ZW50LlwiXG5cbmV4dGVuc2lvbiA9IChleHRlbnNpb24pIC0+IHRlZSAoe3RhcmdldH0pIC0+IHRhcmdldC5leHRlbnNpb24gPSBleHRlbnNpb25cblxuY29weSA9IGN1cnJ5IGJpbmFyeSAoZGlyZWN0b3J5LCBjb250ZXh0KSAtPlxuICB7c291cmNlLCB0YXJnZXR9ID0gY29tcGxldGUgZGlyZWN0b3J5LCBjb250ZXh0XG4gIGF3YWl0IG1rZGlycCBcIjA3NzdcIiwgdGFyZ2V0LmRpcmVjdG9yeVxuICBjcCBzb3VyY2UucGF0aCwgdGFyZ2V0LnBhdGhcbiAgY29udGV4dFxuXG50cmFuc2Zvcm0gPSAodHJhbnNmb3JtZXIsIG9wdGlvbnMpIC0+XG4gIGFkYXB0ZXIgPSBfdHJhbnNmb3JtIHRyYW5zZm9ybWVyXG4gIHRlZSAoe3NvdXJjZSwgdGFyZ2V0fSkgLT5cbiAgICBzb3VyY2UuY29udGVudCA/PSBhd2FpdCByZWFkIHNvdXJjZS5wYXRoXG4gICAgb3B0aW9ucy5maWxlbmFtZSA9IHNvdXJjZS5wYXRoXG4gICAgcmVzdWx0ID0gYXdhaXQgYWRhcHRlci5yZW5kZXJBc3luYyBzb3VyY2UuY29udGVudCwgb3B0aW9uc1xuICAgIHRhcmdldC5jb250ZW50ID0gcmVzdWx0LmJvZHkgPyBcIlwiXG5cbndhdGNoID0gKHBhdGgsIGhhbmRsZXIpIC0+XG4gIC0+XG4gICAgY2hva2lkYXIud2F0Y2ggcGF0aCwgaWdub3JlSW5pdGlhbDogdHJ1ZVxuICAgIC5vbiBcImFsbFwiLCBoYW5kbGVyXG5cbnNlcnZlID0gKHBhdGgsIG9wdGlvbnMpIC0+XG4gIC0+XG4gICAge3BvcnR9ID0gb3B0aW9uc1xuICAgIGhhbmRsZXIgPSBjb25uZWN0KClcbiAgICBpZiBvcHRpb25zLmxvZ2dlcj9cbiAgICAgIGhhbmRsZXIudXNlIGxvZ2dlciBvcHRpb25zLmxvZ2dlclxuICAgIGlmIG9wdGlvbnMucmV3cml0ZT9cbiAgICAgIGhhbmRsZXIudXNlIGlmIG9wdGlvbnMucmV3cml0ZSB0aGVuIHJld3JpdGUoKSBlbHNlIHJld3JpdGUgb3B0aW9ucy5yZXdyaXRlXG4gICAgaGFuZGxlci51c2UgZmlsZXMgXCIuL2J1aWxkXCIsIG9wdGlvbnMuZmlsZXNcbiAgICBoYW5kbGVyLnVzZSBmaW5pc2hcbiAgICBodHRwLmNyZWF0ZVNlcnZlciBoYW5kbGVyXG4gICAgLmxpc3RlbiBwb3J0LCAtPlxuICAgICAgY29uc29sZS5sb2cgZ3JlZW4gXCJwOWs6IHNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCAje3BvcnR9XCJcblxuZXhwb3J0IHtnbG9iLCByZWFkLCB3cml0ZSwgZXh0ZW5zaW9uLCBjb3B5LCB0cmFuc2Zvcm0sIHdhdGNoLCBzZXJ2ZX1cbiJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=/Users/david/repos/panda-9000/src/helpers.coffee