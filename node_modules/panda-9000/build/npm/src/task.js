"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.run = exports.define = void 0;

var _pandaParchment = require("panda-parchment");

var _pandaGenerics = _interopRequireDefault(require("panda-generics"));

var _safe = require("colors/safe");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var define,
    lookup,
    run,
    tasks,
    indexOf = [].indexOf;
exports.run = run;
exports.define = define;
tasks = {};

lookup = function (name) {
  return tasks[name];
};

exports.define = define = _pandaGenerics.default.create({
  name: "define",
  description: "Defines a P9K task."
});

_pandaGenerics.default.define(define, _pandaParchment.isString, _pandaParchment.isArray, _pandaParchment.isFunction, function (name, dependencies, action) {
  return tasks[name] = {
    dependencies,
    action
  };
});

_pandaGenerics.default.define(define, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isFunction, function (name, dependencies, action) {
  return define(name, dependencies.split(/\s+/), action);
});

_pandaGenerics.default.define(define, _pandaParchment.isString, _pandaParchment.isDefined, function (name, dependencies) {
  return define(name, dependencies, function () {});
});

_pandaGenerics.default.define(define, _pandaParchment.isString, _pandaParchment.isFunction, function (name, action) {
  return define(name, [], action);
});

exports.run = run = async function (name = "default", visited = []) {
  var action, background, dependencies, dependency, finish, flag, i, len, result, start, task;
  flag = name.slice(-1);

  if (flag === "&") {
    background = true;
    name = name.slice(0, -1);
  }

  if (indexOf.call(visited, name) < 0) {
    console.error(`[P9K] Starting ${(0, _safe.green)(name)} ...`);
    visited.push(name);

    if ((task = lookup(name)) != null) {
      ({
        dependencies,
        action
      } = task);

      for (i = 0, len = dependencies.length; i < len; i++) {
        dependency = dependencies[i];
        await run(dependency, visited);
      }

      start = (0, _pandaParchment.microseconds)();

      finish = function () {
        var duration;
        finish = (0, _pandaParchment.microseconds)();
        duration = Math.round((finish - start) / 1000);
        return console.error(`[P9K] Finished ${(0, _safe.green)(name)} in ${(0, _safe.magenta)(duration)}ms.`);
      };

      result = action();

      if (background) {
        if ((result != null ? result.then : void 0) != null) {
          return result.then(finish);
        } else {
          return finish();
        }
      } else {
        await result;
        return finish();
      }
    } else {
      return console.error((0, _safe.red)(`[P9K] task ${(0, _safe.green)(name)} not found.`));
    }
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS05MDAwL3NyYy90YXNrLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7O0FBQ0E7Ozs7QUFKQSxJQUFBLE1BQUE7QUFBQSxJQUFBLE1BQUE7QUFBQSxJQUFBLEdBQUE7QUFBQSxJQUFBLEtBQUE7QUFBQSxJQUFBLE9BQUEsR0FBQSxHQUFBLE9BQUE7OztBQU1BLEtBQUEsR0FBUSxFQUFSOztBQUNBLE1BQUEsR0FBUyxVQUFBLElBQUEsRUFBQTtTQUFVLEtBQU0sQ0FBQSxJQUFBLEM7QUFBaEIsQ0FBVDs7QUFFQSxpQkFBQSxNQUFBLEdBQVMsdUJBQUEsTUFBQSxDQUNQO0FBQUEsRUFBQSxJQUFBLEVBQUEsUUFBQTtBQUNBLEVBQUEsV0FBQSxFQUFhO0FBRGIsQ0FETyxDQUFUOztBQUlBLHVCQUFBLE1BQUEsQ0FBQSxNQUFBLEVBQUEsd0JBQUEsRUFBQSx1QkFBQSxFQUFBLDBCQUFBLEVBQ0UsVUFBQSxJQUFBLEVBQUEsWUFBQSxFQUFBLE1BQUEsRUFBQTtTQUNFLEtBQU0sQ0FBTixJQUFNLENBQU4sR0FBYztBQUFBLElBQUEsWUFBQTtBQUFBLElBQUE7QUFBQSxHO0FBRmxCLENBQUE7O0FBSUEsdUJBQUEsTUFBQSxDQUFBLE1BQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBLEVBQUEsMEJBQUEsRUFDRSxVQUFBLElBQUEsRUFBQSxZQUFBLEVBQUEsTUFBQSxFQUFBO1NBQ0UsTUFBQSxDQUFBLElBQUEsRUFBYyxZQUFZLENBQVosS0FBQSxDQUFkLEtBQWMsQ0FBZCxFQUFBLE1BQUEsQztBQUZKLENBQUE7O0FBSUEsdUJBQUEsTUFBQSxDQUFBLE1BQUEsRUFBQSx3QkFBQSxFQUFBLHlCQUFBLEVBQ0UsVUFBQSxJQUFBLEVBQUEsWUFBQSxFQUFBO1NBQXdCLE1BQUEsQ0FBQSxJQUFBLEVBQUEsWUFBQSxFQUEyQixZQUFBLENBQTNCLENBQUEsQztBQUQxQixDQUFBOztBQUdBLHVCQUFBLE1BQUEsQ0FBQSxNQUFBLEVBQUEsd0JBQUEsRUFBQSwwQkFBQSxFQUNFLFVBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQTtTQUFrQixNQUFBLENBQUEsSUFBQSxFQUFBLEVBQUEsRUFBQSxNQUFBLEM7QUFEcEIsQ0FBQTs7QUFHQSxjQUFBLEdBQUEsR0FBTSxnQkFBQyxJQUFBLEdBQUQsU0FBQSxFQUFtQixPQUFBLEdBQW5CLEVBQUEsRUFBQTtBQUVKLE1BQUEsTUFBQSxFQUFBLFVBQUEsRUFBQSxZQUFBLEVBQUEsVUFBQSxFQUFBLE1BQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLElBQUE7QUFBQSxFQUFBLElBQUEsR0FBTyxJQUFLLENBQUEsS0FBTCxDQUFLLENBQUEsQ0FBTCxDQUFQOztBQUNBLE1BQUcsSUFBQSxLQUFILEdBQUEsRUFBQTtBQUNFLElBQUEsVUFBQSxHQUFhLElBQWI7QUFDQSxJQUFBLElBQUEsR0FBTyxJQUFLLENBQUEsS0FBTCxDQUFLLENBQUwsRUFBSyxDQUZkLENBRVMsQ0FBUDs7O0FBRUYsTUFBTyxPQUFBLENBQUEsSUFBQSxDQUFBLE9BQUEsRUFBQSxJQUFBLElBQVAsQ0FBQSxFQUFBO0FBRUUsSUFBQSxPQUFPLENBQVAsS0FBQSxDQUFjLGtCQUFrQixpQkFBbEIsSUFBa0IsQ0FBaEMsTUFBQTtBQUVBLElBQUEsT0FBTyxDQUFQLElBQUEsQ0FBQSxJQUFBOztBQUVBLFFBQUcsQ0FBQSxJQUFBLEdBQUEsTUFBQSxDQUFBLElBQUEsQ0FBQSxLQUFILElBQUEsRUFBQTtBQUNFLE9BQUE7QUFBQSxRQUFBLFlBQUE7QUFBQSxRQUFBO0FBQUEsVUFBQSxJQUFBOztBQUVBLFdBQUEsQ0FBQSxHQUFBLENBQUEsRUFBQSxHQUFBLEdBQUEsWUFBQSxDQUFBLE1BQUEsRUFBQSxDQUFBLEdBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxFQUFBOztBQUNFLGNBQU0sR0FBQSxDQUFBLFVBQUEsRUFBQSxPQUFBLENBQU47QUFERjs7QUFHQSxNQUFBLEtBQUEsR0FBUSxtQ0FBUjs7QUFFQSxNQUFBLE1BQUEsR0FBUyxZQUFBO0FBQ1AsWUFBQSxRQUFBO0FBQUEsUUFBQSxNQUFBLEdBQVMsbUNBQVQ7QUFDQSxRQUFBLFFBQUEsR0FBVyxJQUFJLENBQUosS0FBQSxDQUFXLENBQUMsTUFBQSxHQUFELEtBQUEsSUFBWCxJQUFBLENBQVg7ZUFDQSxPQUFPLENBQVAsS0FBQSxDQUFjLGtCQUFrQixpQkFBbEIsSUFBa0IsQ0FBbEIsT0FBbUMsbUJBQW5DLFFBQW1DLENBQWpELEtBQUEsQztBQUhPLE9BQVQ7O0FBS0EsTUFBQSxNQUFBLEdBQVMsTUFBQSxFQUFUOztBQUVBLFVBQUEsVUFBQSxFQUFBO0FBQ0UsWUFBRyxDQUFBLE1BQUEsSUFBQSxJQUFBLEdBQUEsTUFBQSxDQUFBLElBQUEsR0FBQSxLQUFBLENBQUEsS0FBSCxJQUFBLEVBQUE7aUJBQ0UsTUFBTSxDQUFOLElBQUEsQ0FERixNQUNFLEM7QUFERixTQUFBLE1BQUE7aUJBR0UsTUFIRixFO0FBREY7QUFBQSxPQUFBLE1BQUE7QUFNRSxjQUFNLE1BQU47ZUFDQSxNQVBGLEU7QUFmRjtBQUFBLEtBQUEsTUFBQTthQXlCRSxPQUFPLENBQVAsS0FBQSxDQUFjLGVBQUksY0FBYyxpQkFBZCxJQUFjLENBekJsQyxhQXlCZ0IsQ0FBZCxDO0FBL0JKOztBQVBJLENBQU4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NhbGwsIGNhdCwgaW5jbHVkZXMsIGVtcHR5LCBpc1N0cmluZyxcbiAgaXNBcnJheSwgaXNGdW5jdGlvbiwgaXNEZWZpbmVkLCBpc09iamVjdCxcbiAgbWljcm9zZWNvbmRzfSBmcm9tIFwicGFuZGEtcGFyY2htZW50XCJcbmltcG9ydCBNZXRob2QgZnJvbSBcInBhbmRhLWdlbmVyaWNzXCJcbmltcG9ydCB7cmVkLCBncmVlbiwgbWFnZW50YX0gZnJvbSBcImNvbG9ycy9zYWZlXCJcblxudGFza3MgPSB7fVxubG9va3VwID0gKG5hbWUpIC0+IHRhc2tzW25hbWVdXG5cbmRlZmluZSA9IE1ldGhvZC5jcmVhdGVcbiAgbmFtZTogXCJkZWZpbmVcIlxuICBkZXNjcmlwdGlvbjogXCJEZWZpbmVzIGEgUDlLIHRhc2suXCJcblxuTWV0aG9kLmRlZmluZSBkZWZpbmUsIGlzU3RyaW5nLCBpc0FycmF5LCBpc0Z1bmN0aW9uLFxuICAobmFtZSwgZGVwZW5kZW5jaWVzLCBhY3Rpb24pIC0+XG4gICAgdGFza3NbbmFtZV0gPSB7ZGVwZW5kZW5jaWVzLCBhY3Rpb259XG5cbk1ldGhvZC5kZWZpbmUgZGVmaW5lLCBpc1N0cmluZywgaXNTdHJpbmcsIGlzRnVuY3Rpb24sXG4gIChuYW1lLCBkZXBlbmRlbmNpZXMsIGFjdGlvbikgLT5cbiAgICBkZWZpbmUgbmFtZSwgKGRlcGVuZGVuY2llcy5zcGxpdCAvXFxzKy8pLCBhY3Rpb25cblxuTWV0aG9kLmRlZmluZSBkZWZpbmUsIGlzU3RyaW5nLCBpc0RlZmluZWQsXG4gIChuYW1lLCBkZXBlbmRlbmNpZXMpIC0+IGRlZmluZSBuYW1lLCBkZXBlbmRlbmNpZXMsIC0+XG5cbk1ldGhvZC5kZWZpbmUgZGVmaW5lLCBpc1N0cmluZywgaXNGdW5jdGlvbixcbiAgKG5hbWUsIGFjdGlvbikgLT4gZGVmaW5lIG5hbWUsIFtdLCBhY3Rpb25cblxucnVuID0gKG5hbWUgPSBcImRlZmF1bHRcIiwgdmlzaXRlZCA9IFtdKSAtPlxuXG4gIGZsYWcgPSBuYW1lWy0xLi5dXG4gIGlmIGZsYWcgPT0gXCImXCJcbiAgICBiYWNrZ3JvdW5kID0gdHJ1ZVxuICAgIG5hbWUgPSBuYW1lWzAuLi0yXVxuXG4gIHVubGVzcyBuYW1lIGluIHZpc2l0ZWRcblxuICAgIGNvbnNvbGUuZXJyb3IgXCJbUDlLXSBTdGFydGluZyAje2dyZWVuIG5hbWV9IC4uLlwiXG5cbiAgICB2aXNpdGVkLnB1c2ggbmFtZVxuXG4gICAgaWYgKHRhc2sgPSBsb29rdXAgbmFtZSk/XG4gICAgICB7ZGVwZW5kZW5jaWVzLCBhY3Rpb259ID0gdGFza1xuXG4gICAgICBmb3IgZGVwZW5kZW5jeSBpbiBkZXBlbmRlbmNpZXNcbiAgICAgICAgYXdhaXQgcnVuIGRlcGVuZGVuY3ksIHZpc2l0ZWRcblxuICAgICAgc3RhcnQgPSBtaWNyb3NlY29uZHMoKVxuXG4gICAgICBmaW5pc2ggPSAtPlxuICAgICAgICBmaW5pc2ggPSBtaWNyb3NlY29uZHMoKVxuICAgICAgICBkdXJhdGlvbiA9IE1hdGgucm91bmQgKGZpbmlzaCAtIHN0YXJ0KS8xMDAwXG4gICAgICAgIGNvbnNvbGUuZXJyb3IgXCJbUDlLXSBGaW5pc2hlZCAje2dyZWVuIG5hbWV9IGluICN7bWFnZW50YSBkdXJhdGlvbn1tcy5cIlxuXG4gICAgICByZXN1bHQgPSBhY3Rpb24oKVxuXG4gICAgICBpZiBiYWNrZ3JvdW5kXG4gICAgICAgIGlmIHJlc3VsdD8udGhlbj9cbiAgICAgICAgICByZXN1bHQudGhlbiBmaW5pc2hcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGZpbmlzaCgpXG4gICAgICBlbHNlXG4gICAgICAgIGF3YWl0IHJlc3VsdFxuICAgICAgICBmaW5pc2goKVxuXG4gICAgZWxzZVxuICAgICAgY29uc29sZS5lcnJvciByZWQgXCJbUDlLXSB0YXNrICN7Z3JlZW4gbmFtZX0gbm90IGZvdW5kLlwiXG5cbmV4cG9ydCB7ZGVmaW5lLCBydW59XG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceURL=/Users/david/repos/panda-9000/src/task.coffee