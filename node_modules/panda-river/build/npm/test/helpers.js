"use strict";

var Amen, EventEmitter, accumulate, assert, combine, createReadStream, events, flow, go, lines, map, next, stream;
({
  createReadStream
} = require("fs"));
({
  EventEmitter
} = require("events"));
assert = require("assert");
Amen = require("amen");
({
  next
} = require("../src/iterator"));
({
  go
} = require("../src/helpers"));
({
  map,
  accumulate,
  lines
} = require("../src/filters"));
({
  flow,
  events,
  stream,
  combine
} = require("../src/adapters"));
Amen.describe("Helpers", function (context) {
  context.test("go", function* () {
    var _lines;

    _lines = [];
    yield go([stream(createReadStream("./test/data/lines.txt")), lines, map(function (line) {
      return _lines.push(line);
    })]);
    assert(_lines.length === 3);
    assert(_lines[0] === "one");
    assert(_lines[1] === "two");
    return assert(_lines[2] === "three");
  });
  return context.test("combine/accumulate example", function* () {
    var click, i, j, k;
    click = {
      increment: new EventEmitter(),
      decrement: new EventEmitter()
    };
    i = flow([events("change", click.increment), map(function () {
      return 1;
    })]);
    j = flow([events("change", click.decrement), map(function () {
      return -1;
    })]);
    k = flow([combine(i, j), accumulate(function (a, b) {
      return a + b;
    }, 0)]); // inc, dec

    click.increment.emit("change");
    assert((yield next(k)).value === 1);
    click.decrement.emit("change");
    assert((yield next(k)).value === 0);
    click.increment.emit("change");
    assert((yield next(k)).value === 1);
    click.increment.emit("change");
    assert((yield next(k)).value === 2);
    click.decrement.emit("change");
    return assert((yield next(k)).value === 1);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS1yaXZlci90ZXN0L2hlbHBlcnMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQSxJQUFBLEVBQUEsWUFBQSxFQUFBLFVBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLGdCQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQTtBQUFBLENBQUE7QUFBQSxFQUFBO0FBQUEsSUFBcUIsT0FBQSxDQUFyQixJQUFxQixDQUFyQjtBQUNBLENBQUE7QUFBQSxFQUFBO0FBQUEsSUFBaUIsT0FBQSxDQUFqQixRQUFpQixDQUFqQjtBQUVBLE1BQUEsR0FBUyxPQUFBLENBQUEsUUFBQSxDQUFUO0FBQ0EsSUFBQSxHQUFPLE9BQUEsQ0FBQSxNQUFBLENBQVA7QUFFQSxDQUFBO0FBQUEsRUFBQTtBQUFBLElBQVMsT0FBQSxDQUFULGlCQUFTLENBQVQ7QUFDQSxDQUFBO0FBQUEsRUFBQTtBQUFBLElBQU8sT0FBQSxDQUFQLGdCQUFPLENBQVA7QUFDQSxDQUFBO0FBQUEsRUFBQSxHQUFBO0FBQUEsRUFBQSxVQUFBO0FBQUEsRUFBQTtBQUFBLElBQTJCLE9BQUEsQ0FBM0IsZ0JBQTJCLENBQTNCO0FBQ0EsQ0FBQTtBQUFBLEVBQUEsSUFBQTtBQUFBLEVBQUEsTUFBQTtBQUFBLEVBQUEsTUFBQTtBQUFBLEVBQUE7QUFBQSxJQUFrQyxPQUFBLENBQWxDLGlCQUFrQyxDQUFsQztBQUVBLElBQUksQ0FBSixRQUFBLENBQUEsU0FBQSxFQUF5QixVQUFBLE9BQUEsRUFBQTtBQUV2QixFQUFBLE9BQU8sQ0FBUCxJQUFBLENBQUEsSUFBQSxFQUFtQixhQUFBO0FBRWpCLFFBQUEsTUFBQTs7QUFBQSxJQUFBLE1BQUEsR0FBUyxFQUFUO0FBRUEsVUFBTSxFQUFBLENBQUcsQ0FDUCxNQUFBLENBQU8sZ0JBQUEsQ0FEQSx1QkFDQSxDQUFQLENBRE8sRUFBQSxLQUFBLEVBR1AsR0FBQSxDQUFJLFVBQUEsSUFBQSxFQUFBO2FBQVUsTUFBTSxDQUFOLElBQUEsQ0FBQSxJQUFBLEM7QUFIUCxLQUdQLENBSE8sQ0FBSCxDQUFOO0FBTUEsSUFBQSxNQUFBLENBQU8sTUFBTSxDQUFOLE1BQUEsS0FBUCxDQUFBLENBQUE7QUFDQSxJQUFBLE1BQUEsQ0FBTyxNQUFPLENBQVAsQ0FBTyxDQUFQLEtBQVAsS0FBQSxDQUFBO0FBQ0EsSUFBQSxNQUFBLENBQU8sTUFBTyxDQUFQLENBQU8sQ0FBUCxLQUFQLEtBQUEsQ0FBQTtXQUNBLE1BQUEsQ0FBTyxNQUFPLENBQVAsQ0FBTyxDQUFQLEtBQVAsT0FBQSxDO0FBYkYsR0FBQTtTQWVBLE9BQU8sQ0FBUCxJQUFBLENBQUEsNEJBQUEsRUFBMkMsYUFBQTtBQUN6QyxRQUFBLEtBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUE7QUFBQSxJQUFBLEtBQUEsR0FDRTtBQUFBLE1BQUEsU0FBQSxFQUFXLElBQVgsWUFBVyxFQUFYO0FBQ0EsTUFBQSxTQUFBLEVBQVcsSUFBSSxZQUFKO0FBRFgsS0FERjtBQUlBLElBQUEsQ0FBQSxHQUFJLElBQUEsQ0FBSyxDQUNQLE1BQUEsQ0FBQSxRQUFBLEVBQWlCLEtBQUssQ0FEZixTQUNQLENBRE8sRUFFUCxHQUFBLENBQUksWUFBQTthQUFHLEM7QUFGQSxLQUVQLENBRk8sQ0FBTCxDQUFKO0FBS0EsSUFBQSxDQUFBLEdBQUksSUFBQSxDQUFLLENBQ1AsTUFBQSxDQUFBLFFBQUEsRUFBaUIsS0FBSyxDQURmLFNBQ1AsQ0FETyxFQUVQLEdBQUEsQ0FBSSxZQUFBO2FBQUcsQ0FBQyxDO0FBRkQsS0FFUCxDQUZPLENBQUwsQ0FBSjtBQUtBLElBQUEsQ0FBQSxHQUFJLElBQUEsQ0FBSyxDQUNQLE9BQUEsQ0FBQSxDQUFBLEVBRE8sQ0FDUCxDQURPLEVBRVAsVUFBQSxDQUFZLFVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTthQUFVLENBQUEsR0FBSSxDO0FBQTFCLEtBQUEsRUFGTyxDQUVQLENBRk8sQ0FBTCxDQUFKLENBZnlDLEM7O0FBcUJ6QyxJQUFBLEtBQUssQ0FBQyxTQUFOLENBQUEsSUFBQSxDQUFBLFFBQUE7QUFDQSxJQUFBLE1BQUEsQ0FBTyxDQUFDLE1BQU0sSUFBQSxDQUFQLENBQU8sQ0FBUCxFQUFBLEtBQUEsS0FBUCxDQUFBLENBQUE7QUFDQSxJQUFBLEtBQUssQ0FBQyxTQUFOLENBQUEsSUFBQSxDQUFBLFFBQUE7QUFDQSxJQUFBLE1BQUEsQ0FBTyxDQUFDLE1BQU0sSUFBQSxDQUFQLENBQU8sQ0FBUCxFQUFBLEtBQUEsS0FBUCxDQUFBLENBQUE7QUFDQSxJQUFBLEtBQUssQ0FBQyxTQUFOLENBQUEsSUFBQSxDQUFBLFFBQUE7QUFDQSxJQUFBLE1BQUEsQ0FBTyxDQUFDLE1BQU0sSUFBQSxDQUFQLENBQU8sQ0FBUCxFQUFBLEtBQUEsS0FBUCxDQUFBLENBQUE7QUFDQSxJQUFBLEtBQUssQ0FBQyxTQUFOLENBQUEsSUFBQSxDQUFBLFFBQUE7QUFDQSxJQUFBLE1BQUEsQ0FBTyxDQUFDLE1BQU0sSUFBQSxDQUFQLENBQU8sQ0FBUCxFQUFBLEtBQUEsS0FBUCxDQUFBLENBQUE7QUFDQSxJQUFBLEtBQUssQ0FBQyxTQUFOLENBQUEsSUFBQSxDQUFBLFFBQUE7V0FDQSxNQUFBLENBQU8sQ0FBQyxNQUFNLElBQUEsQ0FBUCxDQUFPLENBQVAsRUFBQSxLQUFBLEtBQVAsQ0FBQSxDO0FBOUJGLEdBQUEsQztBQWpCRixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsie2NyZWF0ZVJlYWRTdHJlYW19ID0gcmVxdWlyZSBcImZzXCJcbntFdmVudEVtaXR0ZXJ9ID0gcmVxdWlyZSBcImV2ZW50c1wiXG5cbmFzc2VydCA9IHJlcXVpcmUgXCJhc3NlcnRcIlxuQW1lbiA9IHJlcXVpcmUgXCJhbWVuXCJcblxue25leHR9ID0gcmVxdWlyZSBcIi4uL3NyYy9pdGVyYXRvclwiXG57Z299ID0gcmVxdWlyZSBcIi4uL3NyYy9oZWxwZXJzXCJcbnttYXAsIGFjY3VtdWxhdGUsIGxpbmVzfSA9IHJlcXVpcmUgXCIuLi9zcmMvZmlsdGVyc1wiXG57ZmxvdywgZXZlbnRzLCBzdHJlYW0sIGNvbWJpbmV9ID0gcmVxdWlyZSBcIi4uL3NyYy9hZGFwdGVyc1wiXG5cbkFtZW4uZGVzY3JpYmUgXCJIZWxwZXJzXCIsIChjb250ZXh0KSAtPlxuXG4gIGNvbnRleHQudGVzdCBcImdvXCIsIC0+XG5cbiAgICBfbGluZXMgPSBbXVxuXG4gICAgeWllbGQgZ28gW1xuICAgICAgc3RyZWFtIGNyZWF0ZVJlYWRTdHJlYW0gXCIuL3Rlc3QvZGF0YS9saW5lcy50eHRcIlxuICAgICAgbGluZXNcbiAgICAgIG1hcCAobGluZSkgLT4gX2xpbmVzLnB1c2ggbGluZVxuICAgIF1cblxuICAgIGFzc2VydCBfbGluZXMubGVuZ3RoID09IDNcbiAgICBhc3NlcnQgX2xpbmVzWzBdID09IFwib25lXCJcbiAgICBhc3NlcnQgX2xpbmVzWzFdID09IFwidHdvXCJcbiAgICBhc3NlcnQgX2xpbmVzWzJdID09IFwidGhyZWVcIlxuXG4gIGNvbnRleHQudGVzdCBcImNvbWJpbmUvYWNjdW11bGF0ZSBleGFtcGxlXCIsIC0+XG4gICAgY2xpY2sgPVxuICAgICAgaW5jcmVtZW50OiBuZXcgRXZlbnRFbWl0dGVyXG4gICAgICBkZWNyZW1lbnQ6IG5ldyBFdmVudEVtaXR0ZXJcblxuICAgIGkgPSBmbG93IFtcbiAgICAgIGV2ZW50cyBcImNoYW5nZVwiLCBjbGljay5pbmNyZW1lbnRcbiAgICAgIG1hcCAtPiAxXG4gICAgXVxuXG4gICAgaiA9IGZsb3cgW1xuICAgICAgZXZlbnRzIFwiY2hhbmdlXCIsIGNsaWNrLmRlY3JlbWVudFxuICAgICAgbWFwIC0+IC0xXG4gICAgXVxuXG4gICAgayA9IGZsb3cgW1xuICAgICAgY29tYmluZSBpLCBqXG4gICAgICBhY2N1bXVsYXRlICgoYSwgYikgLT4gYSArIGIpLCAwXG4gICAgXVxuXG4gICAgIyBpbmMsIGRlY1xuICAgIGNsaWNrLmluY3JlbWVudC5lbWl0IFwiY2hhbmdlXCJcbiAgICBhc3NlcnQgKHlpZWxkIG5leHQgaykudmFsdWUgPT0gMVxuICAgIGNsaWNrLmRlY3JlbWVudC5lbWl0IFwiY2hhbmdlXCJcbiAgICBhc3NlcnQgKHlpZWxkIG5leHQgaykudmFsdWUgPT0gMFxuICAgIGNsaWNrLmluY3JlbWVudC5lbWl0IFwiY2hhbmdlXCJcbiAgICBhc3NlcnQgKHlpZWxkIG5leHQgaykudmFsdWUgPT0gMVxuICAgIGNsaWNrLmluY3JlbWVudC5lbWl0IFwiY2hhbmdlXCJcbiAgICBhc3NlcnQgKHlpZWxkIG5leHQgaykudmFsdWUgPT0gMlxuICAgIGNsaWNrLmRlY3JlbWVudC5lbWl0IFwiY2hhbmdlXCJcbiAgICBhc3NlcnQgKHlpZWxkIG5leHQgaykudmFsdWUgPT0gMVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/david/repos/panda-river/test/helpers.coffee