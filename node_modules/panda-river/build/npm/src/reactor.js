"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isReactor = exports.reactor = exports.isReagent = void 0;

var _pandaGarden = require("panda-garden");

var _pandaGenerics = _interopRequireDefault(require("panda-generics"));

var _pandaParchment = require("panda-parchment");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var asyncIterator, create, define, isAsyncGeneratorFunction, isAsyncIterable, isAsyncIterator, isReactor, isReagent, reactor;
exports.reactor = reactor;
exports.isReagent = isReagent;
exports.isReactor = isReactor;
({
  create,
  define
} = _pandaGenerics.default);

if (Symbol.asyncIterator == null) {
  Symbol.asyncIterator = Symbol("asyncIterator");
}

isAsyncGeneratorFunction = function () {
  var f;

  f = async function* () {
    return yield await null;
  };

  return (0, _pandaParchment.isType)(f.constructor);
}();

exports.isReagent = isReagent = isAsyncIterable = function (x) {
  return (0, _pandaParchment.isFunction)(x != null ? x[Symbol.asyncIterator] : void 0) || isAsyncGeneratorFunction(x);
};

exports.isReactor = isReactor = isAsyncIterator = function (x) {
  return (0, _pandaParchment.isFunction)(x != null ? x.next : void 0) && isReagent(x);
};

exports.reactor = reactor = asyncIterator = create({
  name: "reactor",
  description: "produces a reactor from an input",
  default: "unable to create reactor from value"
});
define(reactor, _pandaParchment.isFunction, function (f) {
  return {
    next: f,
    [Symbol.asyncIterator]: function () {
      return this;
    }
  };
});
define(reactor, isReagent, function (r) {
  return r[Symbol.asyncIterator]();
});
define(reactor, isAsyncGeneratorFunction, function (g) {
  return g();
});
define(reactor, isReactor, function (r) {
  return r;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS1yaXZlci9zcmMvcmVhY3Rvci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRkEsSUFBQSxhQUFBLEVBQUEsTUFBQSxFQUFBLE1BQUEsRUFBQSx3QkFBQSxFQUFBLGVBQUEsRUFBQSxlQUFBLEVBQUEsU0FBQSxFQUFBLFNBQUEsRUFBQSxPQUFBOzs7O0FBSUEsQ0FBQTtBQUFBLEVBQUEsTUFBQTtBQUFBLEVBQUE7QUFBQSxJQUFBLHNCQUFBOzs7QUFFQSxFQUFBLE1BQU0sQ0FBQyxhQUFQLEdBQXdCLE1BQUEsQ0FBQSxlQUFBLENBQXhCOzs7QUFFQSx3QkFBQSxHQUE4QixZQUFBO0FBQzVCLE1BQUEsQ0FBQTs7QUFBQSxFQUFBLENBQUEsR0FBSSxtQkFBQTtBQUFHLFdBQUEsTUFBTSxNQUFOLElBQUE7QUFBSCxHQUFKOztTQUNBLDRCQUFPLENBQUMsQ0FBUixXQUFBLEM7QUFGeUIsQ0FBRyxFQUE5Qjs7QUFJQSxvQkFBQSxTQUFBLEdBQVksZUFBQSxHQUFrQixVQUFBLENBQUEsRUFBQTtTQUMzQixnQ0FBQSxDQUFBLElBQUEsSUFBQSxHQUFXLENBQUcsQ0FBQSxNQUFNLENBQU4sYUFBQSxDQUFkLEdBQWMsS0FBZixDQUFDLENBQUQsSUFBMEMsd0JBQUEsQ0FBRCxDQUFDLEM7QUFEZCxDQUE5Qjs7QUFHQSxvQkFBQSxTQUFBLEdBQVksZUFBQSxHQUFrQixVQUFBLENBQUEsRUFBQTtTQUFRLGdDQUFBLENBQUEsSUFBQSxJQUFBLEdBQVcsQ0FBQyxDQUFFLElBQWQsR0FBYyxLQUFmLENBQUMsQ0FBRCxJQUF5QixTQUFBLENBQUQsQ0FBQyxDO0FBQWhDLENBQTlCOztBQUVBLGtCQUFBLE9BQUEsR0FBVSxhQUFBLEdBQWdCLE1BQUEsQ0FDeEI7QUFBQSxFQUFBLElBQUEsRUFBQSxTQUFBO0FBQ0EsRUFBQSxXQUFBLEVBREEsa0NBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUztBQUZULENBRHdCLENBQTFCO0FBS0EsTUFBQSxDQUFBLE9BQUEsRUFBQSwwQkFBQSxFQUE0QixVQUFBLENBQUEsRUFBQTtTQUMxQjtBQUFBLElBQUEsSUFBQSxFQUFBLENBQUE7QUFDQSxLQUFDLE1BQU0sQ0FBUCxhQUFBLEdBQXdCLFlBQUE7YUFBRyxJO0FBQUg7QUFEeEIsRztBQURGLENBQUEsQ0FBQTtBQUlBLE1BQUEsQ0FBQSxPQUFBLEVBQUEsU0FBQSxFQUEyQixVQUFBLENBQUEsRUFBQTtTQUFPLENBQUUsQ0FBQSxNQUFNLENBQVIsYUFBRSxDQUFGLEU7QUFBbEMsQ0FBQSxDQUFBO0FBRUEsTUFBQSxDQUFBLE9BQUEsRUFBQSx3QkFBQSxFQUEwQyxVQUFBLENBQUEsRUFBQTtTQUFPLENBQUEsRTtBQUFqRCxDQUFBLENBQUE7QUFFQSxNQUFBLENBQUEsT0FBQSxFQUFBLFNBQUEsRUFBMkIsVUFBQSxDQUFBLEVBQUE7U0FBTyxDO0FBQWxDLENBQUEsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aWRlbnRpdHksIGN1cnJ5LCBiaW5hcnksIG5lZ2F0ZX0gZnJvbSBcInBhbmRhLWdhcmRlblwiXG5pbXBvcnQgTWV0aG9kIGZyb20gXCJwYW5kYS1nZW5lcmljc1wiXG5pbXBvcnQge2lzRnVuY3Rpb24sIGlzVHlwZX0gZnJvbSBcInBhbmRhLXBhcmNobWVudFwiXG5cbntjcmVhdGUsIGRlZmluZX0gPSBNZXRob2RcblxuU3ltYm9sLmFzeW5jSXRlcmF0b3IgPz0gU3ltYm9sIFwiYXN5bmNJdGVyYXRvclwiXG5cbmlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGRvIC0+XG4gIGYgPSAtPiB5aWVsZCBhd2FpdCBudWxsXG4gIGlzVHlwZSBmLmNvbnN0cnVjdG9yXG5cbmlzUmVhZ2VudCA9IGlzQXN5bmNJdGVyYWJsZSA9ICh4KSAtPlxuICAoaXNGdW5jdGlvbiB4P1tTeW1ib2wuYXN5bmNJdGVyYXRvcl0pIHx8IChpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24geClcblxuaXNSZWFjdG9yID0gaXNBc3luY0l0ZXJhdG9yID0gKHgpIC0+IChpc0Z1bmN0aW9uIHg/Lm5leHQpICYmIChpc1JlYWdlbnQgeClcblxucmVhY3RvciA9IGFzeW5jSXRlcmF0b3IgPSBjcmVhdGVcbiAgbmFtZTogXCJyZWFjdG9yXCJcbiAgZGVzY3JpcHRpb246IFwicHJvZHVjZXMgYSByZWFjdG9yIGZyb20gYW4gaW5wdXRcIlxuICBkZWZhdWx0OiBcInVuYWJsZSB0byBjcmVhdGUgcmVhY3RvciBmcm9tIHZhbHVlXCJcblxuZGVmaW5lIHJlYWN0b3IsIGlzRnVuY3Rpb24sIChmKSAtPlxuICBuZXh0OiBmXG4gIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl06IC0+IEBcblxuZGVmaW5lIHJlYWN0b3IsIGlzUmVhZ2VudCwgKHIpIC0+IHJbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKClcblxuZGVmaW5lIHJlYWN0b3IsIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiwgKGcpIC0+IGcoKVxuXG5kZWZpbmUgcmVhY3RvciwgaXNSZWFjdG9yLCAocikgLT4gclxuXG5leHBvcnQge2lzUmVhZ2VudCwgcmVhY3RvciwgaXNSZWFjdG9yfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/david/repos/panda-river/src/reactor.coffee