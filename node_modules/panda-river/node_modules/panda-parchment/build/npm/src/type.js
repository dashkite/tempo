"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEmpty = exports.length = exports.size = exports.isFunction = exports.isAsyncFunction = exports.isGeneratorFunction = exports.isRegularFunction = exports.isPromise = exports.isDate = exports.isRegExp = exports.isArray = exports.isObject = exports.isString = exports.isBuffer = exports.isFloat = exports.isInteger = exports.isFinite = exports.isNaN = exports.isNumber = exports.isBoolean = exports.isUndefined = exports.isDefined = exports.instanceOf = exports.Type = exports.isKind = exports.isType = exports.isTransitivePrototype = exports.isPrototype = exports.prototype = void 0;

var _pandaGarden = require("panda-garden");

var _pandaGenerics = _interopRequireDefault(require("panda-generics"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var GeneratorFunction, Type, create, define, hasByteLength, hasLength, hasSize, instanceOf, isArray, isAsyncFunction, isBoolean, isBuffer, isDate, isDefined, isDerived, isEmpty, isError, isFinite, isFloat, isFunction, isGeneratorFunction, isInteger, isKind, isNaN, isNumber, isObject, isPromise, isPrototype, isRegExp, isRegularFunction, isString, isTransitivePrototype, isType, isUndefined, length, prototype, size;
exports.size = size;
exports.prototype = prototype;
exports.length = length;
exports.isUndefined = isUndefined;
exports.isType = isType;
exports.isTransitivePrototype = isTransitivePrototype;
exports.isString = isString;
exports.isRegularFunction = isRegularFunction;
exports.isRegExp = isRegExp;
exports.isPrototype = isPrototype;
exports.isPromise = isPromise;
exports.isObject = isObject;
exports.isNumber = isNumber;
exports.isNaN = isNaN;
exports.isKind = isKind;
exports.isInteger = isInteger;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isFunction = isFunction;
exports.isFloat = isFloat;
exports.isFinite = isFinite;
exports.isEmpty = isEmpty;
exports.isDefined = isDefined;
exports.isDate = isDate;
exports.isBuffer = isBuffer;
exports.isBoolean = isBoolean;
exports.isAsyncFunction = isAsyncFunction;
exports.isArray = isArray;
exports.instanceOf = instanceOf;
exports.Type = Type;
({
  create,
  define
} = _pandaGenerics.default);

exports.prototype = prototype = function (value) {
  if (value != null) {
    return Object.getPrototypeOf(value);
  }
};

exports.isPrototype = isPrototype = (0, _pandaGarden.curry)(function (p, value) {
  return p != null && p === prototype(value);
});
exports.isType = isType = (0, _pandaGarden.curry)(function (type, value) {
  return isPrototype(type != null ? type.prototype : void 0, value);
});
exports.isTransitivePrototype = isTransitivePrototype = (0, _pandaGarden.curry)(function (p, value) {
  var q;
  return p != null && (p === (q = prototype(value)) || q != null && isTransitivePrototype(p, q));
});
exports.isKind = isKind = (0, _pandaGarden.curry)(function (type, value) {
  return isTransitivePrototype(type != null ? type.prototype : void 0, value);
}); // TODO: is this correct? to check generally for a derived type
// needs tests ....

isDerived = (0, _pandaGarden.curry)(function (type, value) {
  return isKind(type, value.prototype);
});
exports.isNumber = isNumber = isType(Number);

exports.isNaN = isNaN = function (n) {
  return Number.isNaN(n);
};

exports.isFinite = isFinite = function (n) {
  return Number.isFinite(n);
};

exports.isInteger = isInteger = function (n) {
  return Number.isInteger(n);
};

exports.isFloat = isFloat = function (n) {
  return n === +n && n !== (n | 0);
};

exports.isBoolean = isBoolean = isType(Boolean);
exports.isDate = isDate = isType(Date);
exports.isRegExp = isRegExp = isType(RegExp);
exports.isString = isString = isType(String);
exports.isBuffer = isBuffer = isType(Buffer);
exports.isRegularFunction = isRegularFunction = isType(Function);
exports.isObject = isObject = isType(Object);
exports.isArray = isArray = isType(Array);
isError = isType(Error);

exports.isDefined = isDefined = function (x) {
  return x != null;
};

exports.isUndefined = isUndefined = function (x) {
  return x == null;
};

GeneratorFunction = function* () {
  return yield null;
}.constructor;

exports.isGeneratorFunction = isGeneratorFunction = isType(GeneratorFunction);
exports.isPromise = isPromise = isType(Promise);
exports.isAsyncFunction = isAsyncFunction = isType(async function () {
  return await null;
}.constructor);
exports.isFunction = isFunction = isKind(Function);
exports.instanceOf = instanceOf = (0, _pandaGarden.curry)(function (t, x) {
  return x instanceof t;
});
exports.Type = Type = {
  create: function (type) {
    if (type != null) {
      return new type();
    }
  },
  define: function (parent = Object) {
    return class extends parent {};
  }
};
exports.size = size = exports.length = length = create({
  name: "size",
  description: "Returns the size of a given entity, if it has one.",
  default: function (x) {
    throw new TypeError(`size: not valid for type ${x.constructor}`);
  }
});

hasLength = function (x) {
  return x.length != null;
};

hasByteLength = function (x) {
  return x.byteLength != null;
};

hasSize = function (x) {
  return x.size != null;
};

define(size, hasByteLength, function (x) {
  return x.byteLength;
});
define(size, isObject, function (x) {
  return Object.keys(x).length;
});
define(size, hasSize, function (x) {
  return x.size;
});
define(size, hasLength, function (x) {
  return x.length;
});

exports.isEmpty = isEmpty = function (x) {
  return size(x) === 0;
};
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/david/repos/panda-parchment/src/type.coffee