"use strict";

var _assert = _interopRequireDefault(require("assert"));

var _amen = require("amen");

var _string = require("../src/string");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(async function () {
  return (0, _amen.print)((await (0, _amen.test)("string helpers", [(0, _amen.test)("toString", function () {
    (0, _assert.default)((0, _string.toString)(1) === "1");
    (0, _assert.default)((0, _string.toString)({
      x: 1
    }) === "[object Object]");
    return (0, _assert.default)((0, _string.toString)(function () {
      return "foobar";
    }) === function () {
      return "foobar";
    }.toString());
  }), (0, _amen.test)("toUpper", function () {
    return (0, _assert.default)((0, _string.toUpper)("hello, world!") === "HELLO, WORLD!");
  }), (0, _amen.test)("toLower", function () {
    return (0, _assert.default)((0, _string.toLower)("Hello, World!") === "hello, world!");
  }), (0, _amen.test)("plainText", function () {
    (0, _assert.default)((0, _string.plainText)("hello-world") === "hello world");
    return (0, _assert.default)((0, _string.plainText)("Hello World") === "hello world");
  }), (0, _amen.test)("capitalize", function () {
    return (0, _assert.default)((0, _string.capitalize)("hello world") === "Hello world");
  }), (0, _amen.test)("titleCase", function () {
    return (0, _assert.default)((0, _string.titleCase)("hello woRld") === "Hello World");
  }), (0, _amen.test)("camelCase", function () {
    return (0, _assert.default)((0, _string.camelCase)("Hello World") === "helloWorld");
  }), (0, _amen.test)("underscored", function () {
    return (0, _assert.default)((0, _string.underscored)("Hello World") === "hello_world");
  }), (0, _amen.test)("dashed", function () {
    return (0, _assert.default)((0, _string.dashed)("Hello World") === "hello-world");
  }), (0, _amen.test)("htmlEscape", function () {
    return (0, _assert.default)((0, _string.htmlEscape)("<a href='foo'>bar & baz</a>") === "&lt;a href=&#39;foo&#39;&gt;bar &amp; baz&lt;&#x2F;a&gt;");
  }), (0, _amen.test)("trim", function () {
    return (0, _assert.default)((0, _string.trim)("  Hello, World!  ") === "Hello, World!");
  }), (0, _amen.test)("split", function () {
    return _assert.default.deepEqual((0, _string.split)(", ", "Hello, World!"), ["Hello", "World!"]);
  }), (0, _amen.test)("w", function () {
    return (0, _assert.default)((0, _string.w)("one two three").length === 3);
  }), (0, _amen.test)("blank", function () {
    (0, _assert.default)((0, _string.blank)(""));
    return (0, _assert.default)(!(0, _string.blank)("x"));
  }), (0, _amen.test)("isMatch", function () {
    return (0, _assert.default)((0, _string.isMatch)(/foo/, "foobar"));
  }), // test "match", ->
  //   assert (isMatch /foo/, "foobar")[0] = "foo"
  (0, _amen.test)("replace", function () {
    return (0, _assert.default)((0, _string.replace)(/bar/, "baz", "foobar") === "foobaz");
  })])));
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9wYW5kYS1wYXJjaG1lbnQvdGVzdC9zdHJpbmcuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7QUFLRyxDQUFBLGtCQUFBO1NBRUQsa0JBQU0sTUFBTSxnQkFBQSxnQkFBQSxFQUF1QixDQUVqQyxnQkFBQSxVQUFBLEVBQWlCLFlBQUE7QUFDZix5QkFBUSxzQkFBRCxDQUFDLENBQUQsS0FBUCxHQUFBO0FBQ0EseUJBQVEsc0JBQVM7QUFBQSxNQUFBLENBQUEsRUFBRztBQUFILEtBQVQsQ0FBRCxLQUFQLGlCQUFBO1dBQ0EscUJBQVEsc0JBQVMsWUFBQTthQUFHLFE7QUFBYixLQUFDLENBQUQsS0FBMkIsWUFBQTthQUFHLFE7QUFBSixLQUFBLENBQWpDLFFBQWlDLEVBQWpDLEM7QUFMK0IsR0FFakMsQ0FGaUMsRUFPakMsZ0JBQUEsU0FBQSxFQUFnQixZQUFBO1dBQ2QscUJBQVEscUJBQUQsZUFBQyxDQUFELEtBQVAsZUFBQSxDO0FBUitCLEdBT2pDLENBUGlDLEVBVWpDLGdCQUFBLFNBQUEsRUFBZ0IsWUFBQTtXQUNkLHFCQUFRLHFCQUFELGVBQUMsQ0FBRCxLQUFQLGVBQUEsQztBQVgrQixHQVVqQyxDQVZpQyxFQWFqQyxnQkFBQSxXQUFBLEVBQWtCLFlBQUE7QUFDaEIseUJBQU8sdUJBQUEsYUFBQSxNQUFQLGFBQUE7V0FDQSxxQkFBTyx1QkFBQSxhQUFBLE1BQVAsYUFBQSxDO0FBZitCLEdBYWpDLENBYmlDLEVBaUJqQyxnQkFBQSxZQUFBLEVBQW1CLFlBQUE7V0FDakIscUJBQU8sd0JBQUEsYUFBQSxNQUFQLGFBQUEsQztBQWxCK0IsR0FpQmpDLENBakJpQyxFQW9CakMsZ0JBQUEsV0FBQSxFQUFrQixZQUFBO1dBQ2hCLHFCQUFPLHVCQUFBLGFBQUEsTUFBUCxhQUFBLEM7QUFyQitCLEdBb0JqQyxDQXBCaUMsRUF1QmpDLGdCQUFBLFdBQUEsRUFBa0IsWUFBQTtXQUNoQixxQkFBTyx1QkFBQSxhQUFBLE1BQVAsWUFBQSxDO0FBeEIrQixHQXVCakMsQ0F2QmlDLEVBMEJqQyxnQkFBQSxhQUFBLEVBQW9CLFlBQUE7V0FDbEIscUJBQU8seUJBQUEsYUFBQSxNQUFQLGFBQUEsQztBQTNCK0IsR0EwQmpDLENBMUJpQyxFQTZCakMsZ0JBQUEsUUFBQSxFQUFlLFlBQUE7V0FDYixxQkFBTyxvQkFBQSxhQUFBLE1BQVAsYUFBQSxDO0FBOUIrQixHQTZCakMsQ0E3QmlDLEVBZ0NqQyxnQkFBQSxZQUFBLEVBQW1CLFlBQUE7V0FDakIscUJBQU8sd0JBQUEsNkJBQUEsTUFBUCwwREFBQSxDO0FBakMrQixHQWdDakMsQ0FoQ2lDLEVBb0NqQyxnQkFBQSxNQUFBLEVBQWEsWUFBQTtXQUFHLHFCQUFRLGtCQUFELG1CQUFDLENBQUQsS0FBUCxlQUFBLEM7QUFwQ2lCLEdBb0NqQyxDQXBDaUMsRUFzQ2pDLGdCQUFBLE9BQUEsRUFBYyxZQUFBO1dBQ1osZ0JBQUEsU0FBQSxDQUFrQixtQkFBQSxJQUFBLEVBQWxCLGVBQWtCLENBQWxCLEVBQWdELENBQUEsT0FBQSxFQUFoRCxRQUFnRCxDQUFoRCxDO0FBdkMrQixHQXNDakMsQ0F0Q2lDLEVBeUNqQyxnQkFBQSxHQUFBLEVBQVUsWUFBQTtXQUFHLHFCQUFRLGVBQUQsZUFBQyxDQUFELENBQUEsTUFBQSxLQUFQLENBQUEsQztBQXpDb0IsR0F5Q2pDLENBekNpQyxFQTJDakMsZ0JBQUEsT0FBQSxFQUFjLFlBQUE7QUFDWix5QkFBTyxtQkFBUCxFQUFPLENBQVA7V0FDQSxxQkFBTyxDQUFDLG1CQUFSLEdBQVEsQ0FBUixDO0FBN0MrQixHQTJDakMsQ0EzQ2lDLEVBK0NqQyxnQkFBQSxTQUFBLEVBQWdCLFlBQUE7V0FDZCxxQkFBUSxxQkFBQSxLQUFBLEVBQVIsUUFBUSxDQUFSLEM7QUFoRCtCLEdBK0NqQyxDQS9DaUMsRTs7QUFxRGpDLGtCQUFBLFNBQUEsRUFBZ0IsWUFBQTtXQUNkLHFCQUFRLHFCQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUQsUUFBQyxDQUFELEtBQVAsUUFBQSxDO0FBdEQrQixHQXFEakMsQ0FyRGlDLENBQXZCLENBQVosRTtBQUZGLENBQUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gXCJhc3NlcnRcIlxuaW1wb3J0IHt0ZXN0LCBwcmludH0gZnJvbSBcImFtZW5cIlxuXG5pbXBvcnQge3RvU3RyaW5nLCB0b1VwcGVyLCB0b0xvd2VyLCBjYXBpdGFsaXplLFxuICB0aXRsZUNhc2UsIGNhbWVsQ2FzZSwgdW5kZXJzY29yZWQsIGRhc2hlZCwgcGxhaW5UZXh0LFxuICBodG1sRXNjYXBlLCB3LCBibGFuaywgbWF0Y2gsIGlzTWF0Y2gsIHJlcGxhY2UsXG4gIHRyaW0sIHNwbGl0fSBmcm9tIFwiLi4vc3JjL3N0cmluZ1wiXG5cbmRvIC0+XG5cbiAgcHJpbnQgYXdhaXQgdGVzdCBcInN0cmluZyBoZWxwZXJzXCIsIFtcblxuICAgIHRlc3QgXCJ0b1N0cmluZ1wiLCAtPlxuICAgICAgYXNzZXJ0ICh0b1N0cmluZyAxKSA9PSBcIjFcIlxuICAgICAgYXNzZXJ0ICh0b1N0cmluZyB4OiAxKSA9PSBcIltvYmplY3QgT2JqZWN0XVwiXG4gICAgICBhc3NlcnQgKHRvU3RyaW5nIC0+IFwiZm9vYmFyXCIpID09ICgtPiBcImZvb2JhclwiKS50b1N0cmluZygpXG5cbiAgICB0ZXN0IFwidG9VcHBlclwiLCAtPlxuICAgICAgYXNzZXJ0ICh0b1VwcGVyIFwiaGVsbG8sIHdvcmxkIVwiKSA9PSBcIkhFTExPLCBXT1JMRCFcIlxuXG4gICAgdGVzdCBcInRvTG93ZXJcIiwgLT5cbiAgICAgIGFzc2VydCAodG9Mb3dlciBcIkhlbGxvLCBXb3JsZCFcIikgPT0gXCJoZWxsbywgd29ybGQhXCJcblxuICAgIHRlc3QgXCJwbGFpblRleHRcIiwgLT5cbiAgICAgIGFzc2VydCBwbGFpblRleHQoXCJoZWxsby13b3JsZFwiKSA9PSBcImhlbGxvIHdvcmxkXCJcbiAgICAgIGFzc2VydCBwbGFpblRleHQoXCJIZWxsbyBXb3JsZFwiKSA9PSBcImhlbGxvIHdvcmxkXCJcblxuICAgIHRlc3QgXCJjYXBpdGFsaXplXCIsIC0+XG4gICAgICBhc3NlcnQgY2FwaXRhbGl6ZSggXCJoZWxsbyB3b3JsZFwiICkgPT0gXCJIZWxsbyB3b3JsZFwiXG5cbiAgICB0ZXN0IFwidGl0bGVDYXNlXCIsIC0+XG4gICAgICBhc3NlcnQgdGl0bGVDYXNlKCBcImhlbGxvIHdvUmxkXCIgKSA9PSBcIkhlbGxvIFdvcmxkXCJcblxuICAgIHRlc3QgXCJjYW1lbENhc2VcIiwgLT5cbiAgICAgIGFzc2VydCBjYW1lbENhc2UoIFwiSGVsbG8gV29ybGRcIiApID09IFwiaGVsbG9Xb3JsZFwiXG5cbiAgICB0ZXN0IFwidW5kZXJzY29yZWRcIiwgLT5cbiAgICAgIGFzc2VydCB1bmRlcnNjb3JlZCggXCJIZWxsbyBXb3JsZFwiICkgPT0gXCJoZWxsb193b3JsZFwiXG5cbiAgICB0ZXN0IFwiZGFzaGVkXCIsIC0+XG4gICAgICBhc3NlcnQgZGFzaGVkKCBcIkhlbGxvIFdvcmxkXCIgKSA9PSBcImhlbGxvLXdvcmxkXCJcblxuICAgIHRlc3QgXCJodG1sRXNjYXBlXCIsIC0+XG4gICAgICBhc3NlcnQgaHRtbEVzY2FwZSggXCI8YSBocmVmPSdmb28nPmJhciAmIGJhejwvYT5cIiApID09XG4gICAgICAgIFwiJmx0O2EgaHJlZj0mIzM5O2ZvbyYjMzk7Jmd0O2JhciAmYW1wOyBiYXombHQ7JiN4MkY7YSZndDtcIlxuXG4gICAgdGVzdCBcInRyaW1cIiwgLT4gYXNzZXJ0ICh0cmltIFwiICBIZWxsbywgV29ybGQhICBcIikgPT0gXCJIZWxsbywgV29ybGQhXCJcblxuICAgIHRlc3QgXCJzcGxpdFwiLCAtPlxuICAgICAgYXNzZXJ0LmRlZXBFcXVhbCAoc3BsaXQgXCIsIFwiLCBcIkhlbGxvLCBXb3JsZCFcIiksIFtcIkhlbGxvXCIsIFwiV29ybGQhXCJdXG5cbiAgICB0ZXN0IFwid1wiLCAtPiBhc3NlcnQgKHcgXCJvbmUgdHdvIHRocmVlXCIpLmxlbmd0aCA9PSAzXG5cbiAgICB0ZXN0IFwiYmxhbmtcIiwgLT5cbiAgICAgIGFzc2VydCBibGFuayBcIlwiXG4gICAgICBhc3NlcnQgIWJsYW5rIFwieFwiXG5cbiAgICB0ZXN0IFwiaXNNYXRjaFwiLCAtPlxuICAgICAgYXNzZXJ0IChpc01hdGNoIC9mb28vLCBcImZvb2JhclwiKVxuXG4gICAgIyB0ZXN0IFwibWF0Y2hcIiwgLT5cbiAgICAjICAgYXNzZXJ0IChpc01hdGNoIC9mb28vLCBcImZvb2JhclwiKVswXSA9IFwiZm9vXCJcbiAgICAjXG4gICAgdGVzdCBcInJlcGxhY2VcIiwgLT5cbiAgICAgIGFzc2VydCAocmVwbGFjZSAvYmFyLywgXCJiYXpcIiwgXCJmb29iYXJcIikgPT0gXCJmb29iYXpcIlxuXG5dXG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceURL=/Users/david/repos/panda-parchment/test/string.coffee